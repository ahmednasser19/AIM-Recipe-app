[{"/Users/ahmed/Downloads/AIM-recipe-app/client/src/index.js":"1","/Users/ahmed/Downloads/AIM-recipe-app/client/src/App.js":"2","/Users/ahmed/Downloads/AIM-recipe-app/client/src/reportWebVitals.js":"3","/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/layouts/Header.js":"4","/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/layouts/Navbar.js":"5","/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/layouts/Footer.js":"6","/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/Recipes.js":"7","/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/AddRecipe.js":"8","/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/Recipe.js":"9","/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/EditRecipe.js":"10"},{"size":563,"mtime":1606857923182,"results":"11","hashOfConfig":"12"},{"size":1171,"mtime":1606869487027,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606851715331,"results":"14","hashOfConfig":"12"},{"size":528,"mtime":1606857742808,"results":"15","hashOfConfig":"12"},{"size":1576,"mtime":1606874617686,"results":"16","hashOfConfig":"12"},{"size":528,"mtime":1606861733066,"results":"17","hashOfConfig":"12"},{"size":1756,"mtime":1606913628926,"results":"18","hashOfConfig":"12"},{"size":3744,"mtime":1606875571422,"results":"19","hashOfConfig":"12"},{"size":1995,"mtime":1606913518807,"results":"20","hashOfConfig":"12"},{"size":4112,"mtime":1606913584032,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1n0xxvh",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/ahmed/Downloads/AIM-recipe-app/client/src/index.js",[],["47","48"],"/Users/ahmed/Downloads/AIM-recipe-app/client/src/App.js",[],"/Users/ahmed/Downloads/AIM-recipe-app/client/src/reportWebVitals.js",[],"/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/layouts/Header.js",[],"/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/layouts/Navbar.js",[],["49","50"],"/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/layouts/Footer.js",[],"/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/Recipes.js",["51"],"import React ,{useState} from 'react'\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom'\nimport axios from 'axios';\nconst Recipes = ({posts }) => {\nconst [recipe ,setRecipe] = useState([]);\n\n//// Delete Recipe by id \nconst deleteRecipe = id =>{ \n    axios.delete(`/recipes/${id}`)\n    .then(res => alert(res.date));\n    setRecipe(recipe.filter(elem =>  elem._id !== id));\n}\n\n    return (\n        <MainContainer>\n            {\n            posts.map((recipe , key)  => (\n               \n                <div className=\"container\" key={key}>\n                    <img src={`/uploads/${recipe.recipeImage}` } atl=\"...\"  style={{width: \"40%\"}}/>\n\n                    <Link to={{\n                        pathname : `/recipe/${recipe._id}` }}>\n                    <h2>{recipe.title}</h2>\n                    \n                    </Link>\n                    <p>{recipe.recipe}</p>\n                    <span className=\"badge badge-secondary p-2\">{recipe.authorname}</span>\n                    <div className=\"row my-5\">\n                        <div className=\"col-sm-2\">\n                            <Link  to={`/update/${recipe._id}`} className=\" btn btn-outline-success\">Edit Recipe </Link>\n                        </div>\n                        <div className=\"col-sm-2\">\n                            <button  onClick={() => deleteRecipe(recipe._id)}  className=\" btn btn-outline-danger\">Delete  Recipe </button>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </MainContainer>\n    )\n}\n\nexport default Recipes;\n\n/// constainer \nconst  MainContainer = styled.div`\nmargin : 7rem 0 ; \n\nimg { \n    width: 10rem; \n    display: block;\n    margin :0  auto ; \n}\nbackgound-color : red; \n\n`;","/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/AddRecipe.js",[],"/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/Recipe.js",["52"],"import React , {useState , useEffect} from 'react'\nimport styled from \"styled-components\" ; \nimport axios from 'axios';\nimport spinner from '../spinner.gif';\nimport { Link } from 'react-router-dom';\nconst Recipe  = (props) => {\n\n    const [title , setTitle] = useState('');\n    const [recipe , setRecipe] = useState('');\n    const [authorname , setAuthorname] = useState('');\n    const [fileName , setFileName] = useState(\"\");\n\n\n    // get the data form DB\n    \n    useEffect(() => {\n        axios.get(`/recipes/${props.match.params.id}`)\n        .then(res => [\n            setTitle(res.data.title),\n            setRecipe(res.data.recipe),\n            setAuthorname(res.data.authorname),\n            setFileName(res.data.recipeImage)\n        ])\n        .catch(error => console.log(error));\n    },[]) ;\n\n\n    return (    \n            <MainContainer>\n                <img src={`/uploads/${fileName}`} alt=\"...\" style={{margin : \"0 auto \", width:\"40%\" ,display :\"flex\"}} />\n                {!title || !recipe ||! authorname ? <img src={spinner} alt=\"Lodding...\"/> : \n                <>\n                    <h2>{title}</h2>\n                    <p>{recipe}</p>\n                    <p className=\"badge badge-secondary\">{authorname}</p>\n                    <br/>\n                    <Link to=\"/\" type=\"submit\" className=\"btn btn-primary\">Back to Home</Link>\n          \n                </>\n                }\n                \n            </MainContainer>\n    )\n}\n\nexport default Recipe\n\n\n///MAIN CONTAINER\nconst MainContainer = styled.div`\n        \n        \n\n        margin : 6rem ; \n        padding: 3rem 14rem;\n\n        h2{\n            text-align:center;\n            font-weight : 900;\n            color: var(--dark-green)\n        }\n\n        img { \n            \n            display: block : \n            margin :auto ; \n        }\n\n        .btn-primary {\n           \n            background: var(--dark-green);\n            &:hover {\n                background: var(--ligh-green);\n            }        \n`;","/Users/ahmed/Downloads/AIM-recipe-app/client/src/components/EditRecipe.js",["53"],"import React  , {useState ,useEffect}from 'react'\nimport styled from \"styled-components\";\nimport axios from 'axios' ;\n\nconst EditRecipe = (props) => {\n\n    // creating hooks used for our inputs \n    const [title , setTitle] = useState('');\n    const [recipe , setRecipe] = useState('');\n    const [authorname , setAuthorname] = useState('');\n    const [message , setMassege] = useState('');\n    const [fileName , setFileName] = useState(\"\");\n\n\n    \n        const onChangeFile = e => {\n            setFileName(e.target.files[0]); \n        }\n\n    // funtion when you click on it it passes the data to the database by axios\n        const   changeOnClick  = e =>{ \n        e.preventDefault(); // not lodding the page again \n        \n\n\n            const formData =new FormData(); \n            formData.append(\"title\", title);\n            formData.append(\"recipe\", recipe);\n            formData.append(\"authorname\", authorname);\n            formData.append(\"recipeImage\", fileName);\n\n\n            /// to clear the form after subming it\n            setTitle('');\n            setRecipe('');\n            setAuthorname('');\n\n\n\n            /// sending it to the MongoDb using axios\n            axios.put(`/recipes/update/${props.match.params.id}`,formData)\n            .then(res => setMassege(res.data))\n            .catch(err => {\n                console.log(err);\n            })\n        };\n\n        useEffect(() => {\n            axios.get(`/recipes/${props.match.params.id}`)\n            .then(res => [\n                setTitle(res.data.title),\n                setRecipe(res.data.recipe),\n                setAuthorname(res.data.authorname),\n                setFileName(res.data.recipeImage)\n\n            ])\n            .catch(error => console.log(error));\n        },[]) ;\n\n    return (\n\n     <AddRecipeContainer>\n         \n        <div className=\"container\">\n        <h1>Edit  Recipe</h1>\n        <span className=\"message\"> {message}</span>\n            <form onSubmit={changeOnClick} encType=\"multipart/form-data\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"authorname\">Cooker  Name</label>\n                    <input type=\"text\"\n                     className=\"form-control\" \n                     value = {authorname}\n                     onChange={e => {setAuthorname(e.target.value)}}\n                     placeholder=\"Cooker Name\" \n                      \n                      />\n                    \n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title of the Recipe</label>\n                    <input type=\"text\"\n                     className=\"form-control\" \n                     value ={title}\n                     onChange={e => {setTitle(e.target.value)}}\n                     placeholder=\"Title\" />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"recipe\"> Ingredients  of the Recipe</label>\n                    <textarea \n\n                    className=\"form-control\" \n                    value = {recipe}\n                    onChange={e => {setRecipe(e.target.value)}}\n                    rows=\"3\"></textarea>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"file\">Choose Recipe Iamge</label>\n                    <input type=\"file\" filename=\"recipeImage\" className=\"form-control-file\"  onChange={onChangeFile}/>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Edit Recipe</button>\n            </form>\n        </div>\n    </AddRecipeContainer>\n    )\n}\n\nexport default EditRecipe;\n \n\n////AMin container \nconst AddRecipeContainer = styled.div`\n\n    margin:3rem auto ; \n    padding :4 rem ; \n    width : 30rem ; \n\n\n    h1 { \n    font-weight : 900; \n    color: var(--dark-green);\n    }\n    .btn-primary {\n        margin-top :2rem; \n        background: var(--dark-green);\n        &:hover {\n            background: var(--ligh-green);\n        }\n    }\n    .message {\n        font-weight : 900; \n        color :tomato ;\n        padding :1rem 1rem 1rem 0 ; \n    }\n\n`;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":21,"column":21,"nodeType":"62","endLine":21,"endColumn":101},{"ruleId":"63","severity":1,"message":"64","line":25,"column":7,"nodeType":"65","endLine":25,"endColumn":9,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"64","line":58,"column":11,"nodeType":"65","endLine":58,"endColumn":13,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["70"],["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"72","fix":"74"},"Update the dependencies array to be: [props.match.params.id]",{"range":"75","text":"76"},{"range":"77","text":"76"},[796,798],"[props.match.params.id]",[1757,1759]]